
# Test that for-expressions are only allowed in assignment or return (inc. implicit-return)
# Otherwise local variables (including iterator) might not be
# compiled at the right stack location

# Should be legal:
echo for i in 1:3 {2*i} + "";

## This is illegal, 0,1 appear on stack before for loop:
echo [0, 1, for i in 1:3 {2*i}];

## <print> is already on the stack
#print(for i in 1:3 {2*i} + "");

## <f>, 0 are already on the stack
#fn f(i, v) { print(v); }
#f(0, for i in 1:3 {2*i} + "");

#fn g() { return for i in 1:3 {2*i} + ""; }
#print(g());
#
#
## This should fail to compile:
#echo "" + for i in 1:3 {2*i};


# var f = fn(){ print("a"+{ var b = "b"; var c = "c"; b+c }); };
# f();
# var g = fn(){ print(for i in 0:3 {""+i} + for i in 6:9 {""+i}); };
# g();
#
# var h = fn(){ echo ""+for i in 1:5 {2*i}; };
# h();
